#!/usr/bin/env ruby
# Invoke as: ./relaton-doc FILENAME STYLESHEET RELATON-ROOT
require "nokogiri"

require "byebug"; byebug
def ns(xpath)
  xpath.gsub(%r{/([a-zA-z])}, "/xmlns:\\1").
    gsub(%r{::([a-zA-z])}, "::xmlns:\\1").
    gsub(%r{\[([a-zA-z][a-z0-9A-Z@/]* ?=)}, "[xmlns:\\1").
    gsub(%r{\[([a-zA-z][a-z0-9A-Z@/]*\])}, "[xmlns:\\1")
end

NOKOHEAD = <<~HERE.freeze
    <!DOCTYPE html SYSTEM
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml">
    <head> <title></title> <meta charset="UTF-8" /> </head>
    <body> </body> </html>
HERE

# block for processing XML document fragments as XHTML,
# to allow for HTMLentities
def noko(&block)
  doc = ::Nokogiri::XML.parse(NOKOHEAD)
  fragment = doc.fragment("")
  ::Nokogiri::XML::Builder.with fragment, &block
  fragment.to_xml(encoding: "US-ASCII").lines.map do |l|
    l.gsub(/\s*\n/, "")
  end
end

def script_cdata(result)
  result.gsub(%r{<script>\s*<!\[CDATA\[}m, "<script>").
    gsub(%r{\]\]>\s*</script>}, "</script>").
    gsub(%r{<!\[CDATA\[\s*<script>}m, "<script>").
    gsub(%r{</script>\s*\]\]>}, "</script>")
end


unless ARGV.size == 3
  warn "Invoke as: ./relaton-doc FILENAME STYLESHEET RELATON-ROOT"
  exit
end

def convert(file, stylesheet, relaton_root)
  stylesheet = ARGV[1]
  file = File.read(ARGV[0], encoding: "utf-8")
  doc = Nokogiri::XML(file)
  noko do |xml|
    xml.html do |html|
      define_head html, stylesheet, 
        doc&.at(ns("./relaton-collection/title"))&.text || "Untitled"
      make_body html, doc, relaton_root
    end
  end.join("\n")
end

def define_head(html, stylesheet, title)
  html.head do |head|
    head.title { |t| t << title }
    head.style do |style|
      css = File.read(stylesheet)
      style.comment "\n#{css}\n"
    end
  end
end

def make_body(html, xml, relaton_root)
  require "byebug"; byebug
  body_attr = { lang: "EN-US", link: "blue", vlink: "#954F72" }
  html.body **body_attr do |body|
    make_body1(body, xml)
    make_body2(body, xml)
    make_body3(body, xml, relaton_root)
    scripts(body)
  end
end

def make_body1(body, docxml)
  body.div **{ class: "title-section" } do |div1|
    div1 << <<~END
  <header>
    <div class="coverpage">
      <div class="wrapper-top">
        <div class="coverpage-doc-identity">
          <div class="coverpage-title">
            <span class="title-first">#{docxml&.at(ns("./relaton-collection/title"))&.text}</span>
          </div>
        </div>
      </div>
    <div>
  </header>
    END
  end
end

def make_body2(body, docxml)
  body.div **{ class: "prefatory-section" } do |div2|
    div2.p { |p| p << "&nbsp;" } # placeholder
  end
end

def make_body3(body, docxml, relaton_root)
  require "byebug"; byebug
  body.main **{ class: "main-section" } do |div3|
    docxml.xpath(ns("./relaton-collection/relation")).each do |x|
      iterate(div3, x.at(ns("./bibdata | ./relaton-collection")), 1, relaton_root)
    end
  end
end

def script
  <<~'END'
<script>
    /**
    * AnchorJS - v4.1.0 - 2017-09-20
    * https://github.com/bryanbraun/anchorjs
    * Copyright (c) 2017 Bryan Braun; Licensed MIT
    */
    !function(A,e){"use strict";"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():(A.AnchorJS=e(),A.anchors=new A.AnchorJS)}(this,function(){"use strict";return function(A){function e(A){A.icon=A.hasOwnProperty("icon")?A.icon:"",A.visible=A.hasOwnProperty("visible")?A.visible:"hover",A.placement=A.hasOwnProperty("placement")?A.placement:"right",A.ariaLabel=A.hasOwnProperty("ariaLabel")?A.ariaLabel:"Anchor",A.class=A.hasOwnProperty("class")?A.class:"",A.truncate=A.hasOwnProperty("truncate")?Math.floor(A.truncate):64}function t(A){var e;if("string"==typeof A||A instanceof String)e=[].slice.call(document.querySelectorAll(A));else{if(!(Array.isArray(A)||A instanceof NodeList))throw new Error("The selector provided to AnchorJS was invalid.");e=[].slice.call(A)}return e}function i(){if(null===document.head.querySelector("style.anchorjs")){var A,e=document.createElement("style");e.className="anchorjs",e.appendChild(document.createTextNode("")),void 0===(A=document.head.querySelector('[rel="stylesheet"], style'))?document.head.appendChild(e):document.head.insertBefore(e,A),e.sheet.insertRule(" .anchorjs-link {   opacity: 0;   text-decoration: none;   -webkit-font-smoothing: antialiased;   -moz-osx-font-smoothing: grayscale; }",e.sheet.cssRules.length),e.sheet.insertRule(" *:hover > .anchorjs-link, .anchorjs-link:focus  {   opacity: 1; }",e.sheet.cssRules.length),e.sheet.insertRule(" [data-anchorjs-icon]::after {   content: attr(data-anchorjs-icon); }",e.sheet.cssRules.length),e.sheet.insertRule(' @font-face {   font-family: "anchorjs-icons";   src: url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format("truetype"); }',e.sheet.cssRules.length)}}this.options=A||{},this.elements=[],e(this.options),this.isTouchDevice=function(){return!!("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch)},this.add=function(A){var n,o,s,a,r,c,h,l,u,d,f,p=[];if(e(this.options),"touch"===(f=this.options.visible)&&(f=this.isTouchDevice()?"always":"hover"),A||(A="h2, h3, h4, h5, h6"),0===(n=t(A)).length)return this;for(i(),o=document.querySelectorAll("[id]"),s=[].map.call(o,function(A){return A.id}),r=0;r<n.length;r++)if(this.hasAnchorJSLink(n[r]))p.push(r);else{if(n[r].hasAttribute("id"))a=n[r].getAttribute("id");else if(n[r].hasAttribute("data-anchor-id"))a=n[r].getAttribute("data-anchor-id");else{u=l=this.urlify(n[r].textContent),h=0;do{void 0!==c&&(u=l+"-"+h),c=s.indexOf(u),h+=1}while(-1!==c);c=void 0,s.push(u),n[r].setAttribute("id",u),a=u}a.replace(/-/g," "),(d=document.createElement("a")).className="anchorjs-link "+this.options.class,d.href="#"+a,d.setAttribute("aria-label",this.options.ariaLabel),d.setAttribute("data-anchorjs-icon",this.options.icon),"always"===f&&(d.style.opacity="1"),""===this.options.icon&&(d.style.font="1em/1 anchorjs-icons","left"===this.options.placement&&(d.style.lineHeight="inherit")),"left"===this.options.placement?(d.style.position="absolute",d.style.marginLeft="-1em",d.style.paddingRight="0.5em",n[r].insertBefore(d,n[r].firstChild)):(d.style.paddingLeft="0.375em",n[r].appendChild(d))}for(r=0;r<p.length;r++)n.splice(p[r]-r,1);return this.elements=this.elements.concat(n),this},this.remove=function(A){for(var e,i,n=t(A),o=0;o<n.length;o++)(i=n[o].querySelector(".anchorjs-link"))&&(-1!==(e=this.elements.indexOf(n[o]))&&this.elements.splice(e,1),n[o].removeChild(i));return this},this.removeAll=function(){this.remove(this.elements)},this.urlify=function(A){var t=/[& +$,:;=?@"#{}|^~[`%!'<>\]\.\/\(\)\*\\]/g;return this.options.truncate||e(this.options),A.trim().replace(/\'/gi,"").replace(t,"-").replace(/-{2,}/g,"-").substring(0,this.options.truncate).replace(/^-+|-+$/gm,"").toLowerCase()},this.hasAnchorJSLink=function(A){var e=A.firstChild&&(" "+A.firstChild.className+" ").indexOf(" anchorjs-link ")>-1,t=A.lastChild&&(" "+A.lastChild.className+" ").indexOf(" anchorjs-link ")>-1;return e||t||!1}}});
</script>
<script>   
    $(document).ready(function() {
          $('[id^=toc]').each(function ()
          {
             var currentToc = $(this);
       var url = window.location.href;
             currentToc.wrap("<a href='" + url + "#" + currentToc.attr("id") + "' <\/a>");
          });
    });
    anchors.options = {
    placement: 'left'
    };
    anchors.add('h1, h2, h3, h4');
</script>

    END
    end

    def scripts(body)
      body.parent.add_child script   
    end

    def iterate(d0, bib, depth, relaton_root)
      require "byebug"; byebug
      uri = bib.at(ns("./uri"))&.text
      id = bib.at(ns("./docidentifier"))&.text
      d0.div **{ class: bib.name == "bibdata" ? "document" : "doc-section" } do |d|
        d.div **{ class: "doc-line" } do |d1|
          d1.div id, **{ class: "doc-identifier" }
          d1.div **{ class: "doc-type-wrap" } do |d2|
            d2.div bib.at(ns("./@type"))&.text, **{ class: "doc-type #{bib.at(ns("./@type"))&.text&.downcase}" }
          end
        end
        d.div **{ class: "doc-title" } do |d1|
          d1.send "h#{depth}" do |h|
            h << bib.at(ns("./title"))&.text
          end
        end
        d.div **{ class: "doc-info #{bib.at(ns("./status"))&.text&.downcase}" } do |d1|
          d1.div bib.at(ns("./status"))&.text, **{ class: "doc-stage #{bib.at(ns("./status"))&.text&.downcase}" }
          d1.div **{ class: "doc-dates" } do |d2|
            if bib.at(ns("./date[@type = 'published']/on"))
              d2.div bib.at(ns("./date[@type = 'published']/on"))&.text, **{ class: "doc-published" }
            end
            if bib.at(ns("./date[@type = 'updated']/on"))
              d2.div bib.at(ns("./date[@type = 'updated']/on"))&.text, **{ class: "doc-updated" }
            end
          end
        end
        id and d.div **{ class: "doc-bib" } do |d1|
          d1.div **{ class: "doc-bib-relaton" } do |d2|
            d2.a **{ href: URI.escape("#{relaton_root}/id/#{id}.xml") } do |a|
              a << "Relaton XML"
            end
          end
        end
        uri and d.div **{ class: "doc-access" } do |d1|
          d1.div **{ class: "doc-access-button-html" } do |d2|
            d2.a **{ href: uri.sub(/\.[^.]+$/, ".html")} do |a|
              a << "HTML"
            end
          end
          d1.div **{ class: "doc-access-button-pdf" } do |d2|
            d2.a **{ href: uri.sub(/\.[^.]+$/, ".pdf")} do |a|
              a << "PDF"
            end
          end
          d1.div **{ class: "doc-access-button-doc" } do |d2|
            d2.a **{ href: uri.sub(/\.[^.]+$/, ".doc")} do |a|
              a << "Word"
            end
          end
          d1.div **{ class: "doc-access-button-xml" } do |d2|
            d2.a **{ href: uri.sub(/\.[^.]+$/, ".xml")} do |a|
              a << "XML"
            end
          end
        end
        bib.xpath(ns("./relation")).each do |x|
          iterate(d, x.at(ns("./bibdata | ./relaton-collection")), depth + 1, relaton_root)
        end
      end
    end

    def title(div, bib, depth)
      div.send "h#{depth}" do |h| 
        if bib.at(ns("./uri")) 
          h.a **{ href: bib.at(ns("./uri")).text } do |a|
            a << bib.at(ns("./title"))&.text
          end
        else
          h << bib.at(ns("./title"))&.text
        end
      end
    end


    filename = ARGV[0]
    File.open(filename.sub(/\.xml$/, ".html"), "w:UTF-8") do |f|
      f.write(script_cdata(convert(filename, ARGV[1], ARGV[2])))
    end 
